Компонент router является парсером url для извлечения параметров таких как новости, категории, статьи, продукты, пользователи,
номер конкретного пользователя, стати или продукта, а так же дополнительных параметров типа edit, delete, которые
передаются только в get запросах без применения javascript xhr.

Самый простой роутер должен обрабатывать как минимум 1 параметр вида /user, /about, /.
В случае "/" должна отображаться основная страница.
В случае несовпадения ни с одним адресом - должна отображаться страница 404 и скрипт должен возвращать заголовок
 браузеру и поисковым машинам 404 not found.
 В случае произвольных запросов, не попадающих под заранее определенный формат - скрипт может выдавать ошибку 500 server error.

Для работы роутера необходима настройка сервера для перенаправления всех запросов на один адрес index.php
с использованием суперглобального массива $_SERVER["QUERY_STRING"]

Каждый маршрут имеет 2 параметра - сам маршрут url и имя callback функции или closure для простых действий.
Callback является именем php файла-контроллера, где описаны дополнительные методы или контроллер просто подключает
файл с html разметкой.

Продвинутый роутер может обрабатывать пути типа /controller/action/id, где можно передать действие action над конкретной
записью id в таблице.
Для получения значений из url требуется использование регулярных выражений с разделением по группам.
"/(user)/(\w+)/(\d+)"
Тестер регулярных выражений https://regexr.com/

_SERVER["QUERY_STRING"] не содержит в себе первого слеша, но т.к. для красоты задаются пути с начальным слешем,
то его надо удалить при обработке.

Т.к. uri имеет слеши, а в регулярных выражениях слеш является зарезервированным знаком, то такие слеши нужно экранировать
обратным слешем \/

Регулярное выражение всегда заключено в // и имеет признак начала ^ и конца $, поэтому оно должно быть помещено между
маркерами /^ и $/.